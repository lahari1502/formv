{"ast":null,"code":"import './index.css';\nconst form = document.getElementById('form');\nconst username = document.getElementById('username');\nconst email = document.getElementById('email');\nconst password = document.getElementById('password');\nconst phone = document.getElementById('phone');\nconst password2 = document.getElementById('password2');\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  validateInputs();\n});\nconst setError = (element, message) => {\n  const inputControl = element.parentElement;\n  const errorDisplay = inputControl.querySelector('.error');\n  errorDisplay.innerText = message;\n  inputControl.classList.add('error');\n  inputControl.classList.remove('success');\n};\nconst setSuccess = element => {\n  const inputControl = element.parentElement;\n  const errorDisplay = inputControl.querySelector('.error');\n  errorDisplay.innerText = '';\n  inputControl.classList.add('success');\n  inputControl.classList.remove('error');\n};\nconst isValidEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\nconst validateInputs = () => {\n  const usernameValue = username.value.trim();\n  const emailValue = email.value.trim();\n  const passwordValue = password.value.trim();\n  const password2Value = password2.value.trim();\n  const phonevalue = phone.value.trim();\n  if (usernameValue === '') {\n    setError(username, 'Username is required');\n  } else {\n    setSuccess(username);\n  }\n  if (emailValue === '') {\n    setError(email, 'Email is required');\n  } else if (!isValidEmail(emailValue)) {\n    setError(email, 'Provide a valid email address');\n  } else {\n    setSuccess(email);\n  }\n  if (phonevalue === '') {\n    setError(phone, 'phone number is required');\n  } else if (phonevalue.length < 10) {\n    setError(phone, ' phone number must be at least 10 digits');\n  } else {\n    setSuccess(phone);\n  }\n  if (passwordValue === '') {\n    setError(password, 'Password is required');\n  } else if (passwordValue.length < 10) {\n    setError(password, 'Password must be at least 10 character.');\n  } else {\n    setSuccess(password);\n  }\n  if (password2Value === '') {\n    setError(password2, 'Please confirm your password');\n  } else if (password2Value !== passwordValue) {\n    setError(password2, \"Passwords doesn't match\");\n  } else {\n    setSuccess(password2);\n  }\n};","map":{"version":3,"names":["form","document","getElementById","username","email","password","phone","password2","addEventListener","e","preventDefault","validateInputs","setError","element","message","inputControl","parentElement","errorDisplay","querySelector","innerText","classList","add","remove","setSuccess","isValidEmail","re","test","String","toLowerCase","usernameValue","value","trim","emailValue","passwordValue","password2Value","phonevalue","length"],"sources":["D:/react/formv/src/index.js"],"sourcesContent":["\nimport './index.css';\nconst form = document.getElementById('form');\nconst username = document.getElementById('username');\nconst email = document.getElementById('email');\nconst password = document.getElementById('password');\nconst phone=document.getElementById('phone');\nconst password2 = document.getElementById('password2');\n\nform.addEventListener('submit', e => {\n    e.preventDefault();\n\n    validateInputs();\n});\n\nconst setError = (element, message) => {\n    const inputControl = element.parentElement;\n    const errorDisplay = inputControl.querySelector('.error');\n\n    errorDisplay.innerText = message;\n    inputControl.classList.add('error');\n    inputControl.classList.remove('success')\n}\n\nconst setSuccess = element => {\n    const inputControl = element.parentElement;\n    const errorDisplay = inputControl.querySelector('.error');\n\n    errorDisplay.innerText = '';\n    inputControl.classList.add('success');\n    inputControl.classList.remove('error');\n};\n\nconst isValidEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nconst validateInputs = () => {\n    const usernameValue = username.value.trim();\n    const emailValue = email.value.trim();\n    const passwordValue = password.value.trim();\n    const password2Value = password2.value.trim();\n    const phonevalue=phone.value.trim();\n\n    if(usernameValue === '') {\n        setError(username, 'Username is required');\n    } else {\n        setSuccess(username);\n    }\n\n    if(emailValue === '') {\n        setError(email, 'Email is required');\n    } else if (!isValidEmail(emailValue)) {\n        setError(email, 'Provide a valid email address');\n    } else {\n        setSuccess(email);\n    }\n    if( phonevalue=== '') {\n      setError(phone, 'phone number is required');\n  } else if (phonevalue.length<10) {\n      setError(phone, ' phone number must be at least 10 digits');\n  } else {\n      setSuccess(phone);\n  }\n\n\n    if(passwordValue === '') {\n        setError(password, 'Password is required');\n    } else if (passwordValue.length < 10 ) {\n        setError(password, 'Password must be at least 10 character.')\n    } else {\n        setSuccess(password);\n    }\n\n    if(password2Value === '') {\n        setError(password2, 'Please confirm your password');\n    } else if (password2Value !== passwordValue) {\n        setError(password2, \"Passwords doesn't match\");\n    } else {\n        setSuccess(password2);\n    }\n\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}